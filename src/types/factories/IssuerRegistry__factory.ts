/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  IssuerRegistry,
  IssuerRegistryInterface,
} from "../IssuerRegistry";

const _abi = [
  {
    type: "function",
    name: "getCurrentTokenId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getIssuerData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getIssuerDataByAddress",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getIssuerDataById",
    inputs: [
      {
        name: "id",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getIssuerDataByTokenId",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getIssuerOwner",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextTokenId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerIssuer",
    inputs: [
      {
        name: "id",
        type: "string",
        internalType: "string",
      },
      {
        name: "data",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "IssuerRegistered",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "owner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "data",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040526001600055348015601457600080fd5b506111a3806100246000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638c05c47c1161005b5780638c05c47c146100dd578063b26d68f814610108578063ba876bfb14610128578063c7f13ff51461013b57600080fd5b8063422f225f1461008d57806356189236146100ab57806364aa277d146100c157806375794a3c146100d4575b600080fd5b61009561014e565b6040516100a29190610cd1565b60405180910390f35b6100b3610389565b6040519081526020016100a2565b6100956100cf366004610d36565b61039f565b6100b360005481565b6100f06100eb366004610d5f565b6105e4565b6040516001600160a01b0390911681526020016100a2565b61011b610116366004610d5f565b610660565b6040516100a29190610d78565b61011b610136366004610e30565b61075c565b6100b3610149366004610e6d565b6108b8565b336000908152600160209081526040808320805482518185028101850190935280835260609493849084015b8282101561022657838290600052602060002001805461019990610ed6565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610ed6565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b50505050508152602001906001019061017a565b5050505090506000815167ffffffffffffffff81111561024857610248610d8b565b60405190808252806020026020018201604052801561027b57816020015b60608152602001906001900390816102665790505b50905060005b8251811015610382576003600060028584815181106102a2576102a2610f10565b60200260200101516040516102b79190610f26565b908152602001604051809103902054815260200190815260200160002080546102df90610ed6565b80601f016020809104026020016040519081016040528092919081815260200182805461030b90610ed6565b80156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b505050505082828151811061036f5761036f610f10565b6020908102919091010152600101610281565b5092915050565b6000600160005461039a9190610f58565b905090565b6001600160a01b0381166000908152600160209081526040808320805482518185028101850190935280835260609493849084015b828210156104805783829060005260206000200180546103f390610ed6565b80601f016020809104026020016040519081016040528092919081815260200182805461041f90610ed6565b801561046c5780601f106104415761010080835404028352916020019161046c565b820191906000526020600020905b81548152906001019060200180831161044f57829003601f168201915b5050505050815260200190600101906103d4565b5050505090506000815167ffffffffffffffff8111156104a2576104a2610d8b565b6040519080825280602002602001820160405280156104d557816020015b60608152602001906001900390816104c05790505b50905060005b82518110156105dc576003600060028584815181106104fc576104fc610f10565b60200260200101516040516105119190610f26565b9081526020016040518091039020548152602001908152602001600020805461053990610ed6565b80601f016020809104026020016040519081016040528092919081815260200182805461056590610ed6565b80156105b25780601f10610587576101008083540402835291602001916105b2565b820191906000526020600020905b81548152906001019060200180831161059557829003601f168201915b50505050508282815181106105c9576105c9610f10565b60209081029190910101526001016104db565b509392505050565b6000818152600460205260408120546001600160a01b03166106445760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000818152600460205260409020546060906001600160a01b03166106be5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015260640161063b565b600082815260036020526040902080546106d790610ed6565b80601f016020809104026020016040519081016040528092919081815260200182805461070390610ed6565b80156107505780601f1061072557610100808354040283529160200191610750565b820191906000526020600020905b81548152906001019060200180831161073357829003601f168201915b50505050509050919050565b606060006002836040516107709190610f26565b9081526020016040518091039020549050806000036107d15760405162461bcd60e51b815260206004820152601860248201527f49737375657220494420646f6573206e6f742065786973740000000000000000604482015260640161063b565b600081815260036020526040812080546107ea90610ed6565b80601f016020809104026020016040519081016040528092919081815260200182805461081690610ed6565b80156108635780601f1061083857610100808354040283529160200191610863565b820191906000526020600020905b81548152906001019060200180831161084657829003601f168201915b5050505050905060008151116108b15760405162461bcd60e51b815260206004820152601360248201527211185d1848191bd95cc81b9bdd08195e1a5cdd606a1b604482015260640161063b565b9392505050565b60006002836040516108ca9190610f26565b9081526020016040518091039020546000146109285760405162461bcd60e51b815260206004820152601860248201527f49737375657220494420616c7265616479206578697374730000000000000000604482015260640161063b565b600080549061093682610a92565b905083600185516109479190610f58565b8151811061095757610957610f10565b01602001516001600160f81b031916607d60f81b0361098c57610989846000600187516109849190610f58565b610bbe565b93505b600084826040516020016109a1929190610f6b565b6040516020818303038152906040529050826002876040516109c39190610f26565b908152604080516020928190038301902092909255336000908152600180835292812080549384018155815220016109fb8782611010565b506000838152600360205260409020610a148282611010565b506000838152600460205260409081902080546001600160a01b0319163390811790915590517f6c71091cc8424bef0734b467431e82934b081336261c95cfc0ec7b8ca2d070b591610a6a9186919085906110cf565b60405180910390a1600080549080610a8183611102565b909155509293505050505b92915050565b606081600003610ab95750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ae35780610acd81611102565b9150610adc9050600a8361111b565b9150610abd565b60008167ffffffffffffffff811115610afe57610afe610d8b565b6040519080825280601f01601f191660200182016040528015610b28576020820181803683370190505b509050815b8515610bb557610b3e600182610f58565b90506000610b4d600a8861111b565b610b5890600a61113d565b610b629088610f58565b610b6d906030611154565b905060008160f81b905080848481518110610b8a57610b8a610f10565b60200101906001600160f81b031916908160001a905350610bac600a8961111b565b97505050610b2d565b50949350505050565b6060836000610bcd8585610f58565b67ffffffffffffffff811115610be557610be5610d8b565b6040519080825280601f01601f191660200182016040528015610c0f576020820181803683370190505b509050845b84811015610c7757828181518110610c2e57610c2e610f10565b01602001516001600160f81b03191682610c488884610f58565b81518110610c5857610c58610f10565b60200101906001600160f81b031916908160001a905350600101610c14565b5095945050505050565b60005b83811015610c9c578181015183820152602001610c84565b50506000910152565b60008151808452610cbd816020860160208601610c81565b601f01601f19169290920160200192915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015610d2a57603f19878603018452610d15858351610ca5565b94506020938401939190910190600101610cf9565b50929695505050505050565b600060208284031215610d4857600080fd5b81356001600160a01b03811681146108b157600080fd5b600060208284031215610d7157600080fd5b5035919050565b6020815260006108b16020830184610ca5565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610db257600080fd5b813567ffffffffffffffff811115610dcc57610dcc610d8b565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610dfb57610dfb610d8b565b604052818152838201602001851015610e1357600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610e4257600080fd5b813567ffffffffffffffff811115610e5957600080fd5b610e6584828501610da1565b949350505050565b60008060408385031215610e8057600080fd5b823567ffffffffffffffff811115610e9757600080fd5b610ea385828601610da1565b925050602083013567ffffffffffffffff811115610ec057600080fd5b610ecc85828601610da1565b9150509250929050565b600181811c90821680610eea57607f821691505b602082108103610f0a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60008251610f38818460208701610c81565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a8c57610a8c610f42565b60008351610f7d818460208801610c81565b6b16113a37b5b2b724b2111d1160a11b9083019081528351610fa681600c840160208801610c81565b61227d60f01b600c9290910191820152600e01949350505050565b601f82111561100b57806000526020600020601f840160051c81016020851015610fe85750805b601f840160051c820191505b818110156110085760008155600101610ff4565b50505b505050565b815167ffffffffffffffff81111561102a5761102a610d8b565b61103e816110388454610ed6565b84610fc1565b6020601f821160018114611072576000831561105a5750848201515b600019600385901b1c1916600184901b178455611008565b600084815260208120601f198516915b828110156110a25787850151825560209485019460019092019101611082565b50848210156110c05786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8381526001600160a01b03831660208201526060604082018190526000906110f990830184610ca5565b95945050505050565b60006001820161111457611114610f42565b5060010190565b60008261113857634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610a8c57610a8c610f42565b60ff8181168382160190811115610a8c57610a8c610f4256fea2646970667358221220530ed005b74944d50c7604524231b74943743941f8edf11a1eaddfa79b7bfbd164736f6c634300081a0033";

type IssuerRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IssuerRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IssuerRegistry__factory extends ContractFactory {
  constructor(...args: IssuerRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      IssuerRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IssuerRegistry__factory {
    return super.connect(runner) as IssuerRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IssuerRegistryInterface {
    return new Interface(_abi) as IssuerRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): IssuerRegistry {
    return new Contract(address, _abi, runner) as unknown as IssuerRegistry;
  }
}
